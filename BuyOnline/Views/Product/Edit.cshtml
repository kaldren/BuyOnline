@model BuyOnline.ViewModels.ProductFormViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Edit @Model.Name</h2>

    @Html.HiddenFor(m => m.Id, new { @class = "js-product-id" })

    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control js-name" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Price)
        @Html.TextBoxFor(m => m.Price, new { @class = "form-control js-price" })
    </div>
    @*<div class="form-group">
            <label for="exampleInputFile">Upload Photo</label>
            <input type="file" id="exampleInputFile">
            <p class="help-block">Example block-level help text here.</p>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control js-description" })
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Category)
        @Html.DropDownListFor(m => m.Category, new SelectList(Model.Categories, "Id", "Name"), "", new { @class = "form-control js-category" })
    </div>

    <button type="submit" class="btn btn-primary js-edit-product">Edit</button>

@section scripts
{
    <script>
        $(document).ready(function () {

            var productId = $(".js-product-id").attr("value");

            $(".js-edit-product").click(function() {
                $.post("/api/product/" + productId,
                        {
                            Name: $(".js-name").val(),
                            Price: $(".js-price").val(),
                            Description: $(".js-description").val(),
                            Category: $(".js-category").find(":selected").attr("value")
                        })
                    .done(function() {
                        alert("DONE!");
                    })
                    .fail(function() {
                        alert("FAILED!");
                    });
            });
        });
    </script>
}

